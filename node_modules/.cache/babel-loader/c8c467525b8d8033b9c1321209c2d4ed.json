{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/work/lux/demo/product/eth/luxwater/src/pages/marketplace.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport '../css/marketplace.css';\nimport Web3 from 'web3';\nimport { MARKETPLACE_ABI, MARKETPLACE_ADDRESS } from '../config.js';\n{\n  /*import NewToken from '../components/addToken.js'*/\n}\n\nclass Marketplace extends Component {\n  async componentWillMount() {\n    await this.runWeb3();\n    await this.blockchain();\n    await this.getData();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"Marketplace | Lux\";\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      tokens: [],\n      headers: [\"ID\", \"Token\", \"Owner\", \"State\", \"Address\", \"Type\", \"Price\", \"Edit\"],\n      loading: true,\n      showHistory: false,\n      editing: false,\n      updating: 0\n    };\n    this.renderTableData = this.renderTableData.bind(this);\n    this.renderEditData = this.renderEditData.bind(this);\n    this.renderTableHeader = this.renderTableHeader.bind(this);\n    this.editing = this.editing.bind(this);\n  }\n\n  async isInstalled() {\n    if (typeof Web3 !== 'undefined') {\n      console.log('Web3 Provider is installed');\n    } else {\n      console.log('No Web3 Provider!');\n    }\n  }\n\n  async isLocked(web3) {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        console.log(err);\n      } else if (accounts.length === 0) {\n        console.log('Web3 Provider is locked');\n      } else {\n        console.log('Web3 Provider is unlocked');\n      }\n    });\n  }\n\n  async runWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!');\n    }\n  }\n\n  async blockchain() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    this.isInstalled();\n    this.isLocked(web3);\n    const marketplaceData = new web3.eth.Contract(MARKETPLACE_ABI, MARKETPLACE_ADDRESS);\n    this.setState({\n      marketplaceData\n    });\n    const accounts = await web3.eth.getAccounts();\n    const balanceInWei = await web3.eth.getBalance(accounts[0]);\n    var balance = balanceInWei / 1000000000000000000;\n    var account = accounts[0];\n    console.log(\"Account: \" + account);\n    console.log(\"Balance: \" + balance);\n    this.setState({\n      account: accounts[0],\n      balance: balance,\n      loading: false,\n      editing: false\n    });\n  }\n\n  async getData() {\n    this.setState({\n      tokens: []\n    });\n    var marketCount = await this.state.marketplaceData.methods.liquidTokens().call();\n\n    for (var i = 0; i < marketCount; i++) {\n      const singleToken = await this.state.marketplaceData.methods.marketplace(i).call();\n      this.setState({\n        tokens: [...this.state.tokens, singleToken]\n      });\n    }\n  }\n\n  async updateMarketEntry(id, state, pAddress, type, price) {\n    this.setState({\n      loading: false\n    });\n    console.log(typeof id);\n    console.log(typeof state);\n    console.log(typeof pAddress);\n    console.log(typeof price);\n    this.state.marketplaceData.methods.updateMarketEntry(parseInt(id), state, String(pAddress), type, price).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        editing: false\n      });\n      this.getData();\n    });\n    this.setState({\n      loading: true\n    });\n  }\n  /*\n  { this.state.loading\n    ? <div id=\"loader\" className=\"\"><p className=\"\">Communicating with blockchain...</p></div>\n    : <Thought\n      thoughts={this.state.thoughts}\n      createThought={this.createThought}\n      hand = {this.state.currentHandle}\n      acct = {this.state.account}\n     />\n   }\n  */\n\n\n  editing(marketplace) {\n    this.setState({\n      updating: marketplace\n    });\n    this.setState({\n      editing: true\n    });\n  }\n\n  renderEditData(toUpdate) {\n    return this.state.tokens.map((eachToken, index) => {\n      const {\n        id,\n        token,\n        owner,\n        state,\n        physicalAddress,\n        typeToken,\n        price\n      } = eachToken; //destructuring\n\n      if (id == toUpdate) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 20\n          }\n        }, id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 20\n          }\n        }, token), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 20\n          }\n        }, owner), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          className: \"sendForm\",\n          id: \"updateMarketEntryForm\",\n          onSubmit: event => {\n            event.preventDefault();\n            this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          ref: input => this.newState = input,\n          type: \"text\",\n          className: \"addCountryForm\",\n          defaultValue: state,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 24\n          }\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          className: \"sendForm\",\n          id: \"updateMarketEntryForm\",\n          onSubmit: event => {\n            event.preventDefault();\n            this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          ref: input => this.newAddress = input,\n          type: \"text\",\n          className: \"addCountryForm\",\n          defaultValue: physicalAddress,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 24\n          }\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          className: \"sendForm\",\n          id: \"updateMarketEntryForm\",\n          onSubmit: event => {\n            event.preventDefault();\n            this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          ref: input => this.newType = input,\n          type: \"text\",\n          className: \"addCountryForm\",\n          defaultValue: typeToken,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 24\n          }\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          className: \"sendForm\",\n          id: \"updateMarketEntryForm\",\n          onSubmit: event => {\n            event.preventDefault();\n            this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          ref: input => this.newPrice = input,\n          type: \"text\",\n          className: \"addCountryForm\",\n          defaultValue: price,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 24\n          }\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"submit\",\n          hidden: false,\n          form: \"updateMarketEntryForm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 18\n          }\n        }, id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 18\n          }\n        }, token), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 18\n          }\n        }, owner), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 18\n          }\n        }, state), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 18\n          }\n        }, physicalAddress), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 18\n          }\n        }, typeToken), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 18\n          }\n        }, price), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }\n        }, \" Submit \")));\n      }\n    });\n  }\n\n  renderTableData() {\n    return this.state.tokens.map((eachToken, index) => {\n      const {\n        id,\n        token,\n        owner,\n        state,\n        physicalAddress,\n        typeToken,\n        price\n      } = eachToken; //destructuring\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 16\n        }\n      }, id), /*#__PURE__*/React.createElement(\"td\", {\n        onClick: () => this.showEditHistory(token),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 16\n        }\n      }, token), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 16\n        }\n      }, owner), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 16\n        }\n      }, state), console.log(\"test\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 16\n        }\n      }, physicalAddress), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 16\n        }\n      }, typeToken), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 16\n        }\n      }, price), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.editing(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }, \" Edit \")));\n    });\n  }\n  /*\n     async renderTableHeader() {\n        let header = Object.keys(this.state.headers)\n        return header.map((key, index) => {\n           return <th key={index}>{key.toUpperCase()}</th>\n        })\n     }\n     */\n\n\n  renderTableHeader() {\n    return this.state.headers.map((label, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      }, label.toUpperCase());\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tableFlex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, \"Lux Marketplace\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"countries\",\n      className: \"countryTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, this.renderTableHeader()), this.state.editing ? this.renderEditData(this.state.updating) : this.renderTableData()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paddedDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Marketplace;","map":{"version":3,"sources":["/Users/reuben/Desktop/work/lux/demo/product/eth/luxwater/src/pages/marketplace.js"],"names":["React","Component","Web3","MARKETPLACE_ABI","MARKETPLACE_ADDRESS","Marketplace","componentWillMount","runWeb3","blockchain","getData","forceUpdate","componentDidMount","document","title","constructor","props","state","account","balance","tokens","headers","loading","showHistory","editing","updating","renderTableData","bind","renderEditData","renderTableHeader","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","window","ethereum","enable","currentProvider","alert","givenProvider","marketplaceData","Contract","setState","balanceInWei","getBalance","marketCount","methods","liquidTokens","call","i","singleToken","marketplace","updateMarketEntry","id","pAddress","type","price","parseInt","String","send","from","once","receipt","toUpdate","map","eachToken","index","token","owner","physicalAddress","typeToken","event","preventDefault","newState","value","newAddress","newType","newPrice","input","showEditHistory","label","toUpperCase","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport '../css/marketplace.css'\nimport Web3 from 'web3'\n\nimport { MARKETPLACE_ABI, MARKETPLACE_ADDRESS } from '../config.js'\n\n{/*import NewToken from '../components/addToken.js'*/}\n\nclass Marketplace extends Component {\n\n  async componentWillMount() {\n    await this.runWeb3()\n    await this.blockchain()\n    await this.getData()\n    this.forceUpdate()\n  }\n\n\n  componentDidMount(){\n    document.title = \"Marketplace | Lux\"\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      balance: '',\n      tokens: [],\n      headers: [\n        \"ID\",\n        \"Token\",\n        \"Owner\",\n        \"State\",\n        \"Address\",\n        \"Type\",\n        \"Price\",\n        \"Edit\"],\n      loading: true,\n      showHistory: false,\n      editing: false,\n      updating: 0\n    }\n\n    this.renderTableData = this.renderTableData.bind(this)\n    this.renderEditData = this.renderEditData.bind(this)\n    this.renderTableHeader = this.renderTableHeader.bind(this)\n    this.editing = this.editing.bind(this)\n  }\n\n\n  async isInstalled() {\n     if (typeof Web3 !== 'undefined'){\n        console.log('Web3 Provider is installed')\n     }\n     else{\n        console.log('No Web3 Provider!')\n     }\n  }\n\n  async isLocked(web3) {\n     web3.eth.getAccounts(function(err, accounts){\n        if (err != null) {\n           console.log(err)\n        }\n        else if (accounts.length === 0) {\n           console.log('Web3 Provider is locked')\n        }\n        else {\n           console.log('Web3 Provider is unlocked')\n        }\n     });\n  }\n\n\n  async runWeb3() {\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!')\n    }\n  }\n\n\n  async blockchain() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    this.isInstalled();\n    this.isLocked(web3);\n\n    const marketplaceData = new web3.eth.Contract(MARKETPLACE_ABI, MARKETPLACE_ADDRESS)\n\n    this.setState({ marketplaceData })\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceInWei = await web3.eth.getBalance(accounts[0])\n    var balance = balanceInWei/1000000000000000000\n    var account = accounts[0]\n\n    console.log(\"Account: \" + account)\n    console.log(\"Balance: \" + balance)\n\n    this.setState({ account: accounts[0], balance: balance, loading: false, editing: false })\n  }\n\n\n  async getData() {\n\n    this.setState({ tokens: [] })\n\n    var marketCount = await this.state.marketplaceData.methods.liquidTokens().call()\n\n    for (var i = 0; i < marketCount; i++) {\n      const singleToken = await this.state.marketplaceData.methods.marketplace(i).call()\n      this.setState({\n        tokens: [...this.state.tokens, singleToken]\n      })\n    }\n  }\n\n\n  async updateMarketEntry(id, state, pAddress, type, price) {\n\n    this.setState({loading:false})\n\n    console.log(typeof id)\n    console.log(typeof state)\n    console.log(typeof pAddress)\n    console.log(typeof price)\n\n    this.state.marketplaceData.methods.updateMarketEntry(parseInt(id), state, String(pAddress), type, price).send({ from: this.state.account }).once('receipt', (receipt) => {\n        this.setState({ editing: false })\n        this.getData()\n      })\n\n    this.setState({loading:true})\n\n  }\n\n  /*\n  { this.state.loading\n    ? <div id=\"loader\" className=\"\"><p className=\"\">Communicating with blockchain...</p></div>\n    : <Thought\n      thoughts={this.state.thoughts}\n      createThought={this.createThought}\n      hand = {this.state.currentHandle}\n      acct = {this.state.account}\n     />\n\n  }\n  */\n\n\n  editing(marketplace) {\n\n    this.setState({ updating: marketplace })\n    this.setState({ editing: true })\n\n  }\n\n\n  renderEditData(toUpdate) {\n\n      return this.state.tokens.map((eachToken, index) => {\n         const { id, token, owner, state, physicalAddress, typeToken, price } = eachToken //destructuring\n\n         if (id == toUpdate) {\n           return (\n                <tr key={id}>\n                   <td>{id}</td>\n\n                   <td>{token}</td>\n\n                   <td>{owner}</td>\n\n                   <td>\n                     <form className = \"sendForm\" id=\"updateMarketEntryForm\" onSubmit={(event) => {\n                      event.preventDefault()\n                      this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value)\n                     }}>\n                       <input ref={(input) => this.newState = input} type=\"text\" className=\"addCountryForm\" defaultValue={state} required />\n                     </form>\n                   </td>\n\n                   <td>\n                     <form className = \"sendForm\" id=\"updateMarketEntryForm\" onSubmit={(event) => {\n                      event.preventDefault()\n                      this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value)\n                     }}>\n                       <input ref={(input) => this.newAddress = input} type=\"text\" className=\"addCountryForm\" defaultValue={physicalAddress} required />\n                     </form>\n                   </td>\n\n                   <td>\n                     <form className = \"sendForm\" id=\"updateMarketEntryForm\" onSubmit={(event) => {\n                      event.preventDefault()\n                      this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value)\n                     }}>\n                       <input ref={(input) => this.newType = input} type=\"text\" className=\"addCountryForm\" defaultValue={typeToken} required />\n                     </form>\n                   </td>\n\n                   <td>\n                     <form className = \"sendForm\" id=\"updateMarketEntryForm\" onSubmit={(event) => {\n                      event.preventDefault()\n                      this.updateMarketEntry(id, token, this.newState.value, this.newAddress.value, this.newType.value, this.newPrice.value)\n                     }}>\n                       <input ref={(input) => this.newPrice = input} type=\"text\" className=\"addCountryForm\" defaultValue={price} required />\n                     </form>\n                   </td>\n\n                   <td>\n                    <input type=\"submit\" hidden={false} form=\"updateMarketEntryForm\"/>\n                   </td>\n                </tr>\n           )\n         }\n\n         else {\n           return (\n              <tr key={id}>\n                 <td>{id}</td>\n                 <td>{token}</td>\n                 <td>{owner}</td>\n                 <td>{state}</td>\n                 <td>{physicalAddress}</td>\n                 <td>{typeToken}</td>\n                 <td>{price}</td>\n                 <td>\n                  <button> Submit </button>\n                 </td>\n              </tr>\n           )\n         }\n      })\n   }\n\n\n  renderTableData() {\n      return this.state.tokens.map((eachToken, index) => {\n         const { id, token, owner, state, physicalAddress, typeToken, price } = eachToken //destructuring\n         return (\n            <tr key={id}>\n               <td>{id}</td>\n               <td onClick={() => this.showEditHistory(token)}>{token}</td>\n               <td>{owner}</td>\n               <td>{state}</td>\n               {console.log(\"test\")}\n               <td>{physicalAddress}</td>\n               <td>{typeToken}</td>\n               <td>{price}</td>\n               <td>\n                <button onClick={() => this.editing(id)}> Edit </button>\n               </td>\n            </tr>\n         )\n      })\n   }\n\n/*\n   async renderTableHeader() {\n      let header = Object.keys(this.state.headers)\n      return header.map((key, index) => {\n         return <th key={index}>{key.toUpperCase()}</th>\n      })\n   }\n   */\n\n   renderTableHeader() {\n      return this.state.headers.map((label, index) => {\n         return <th key={label}>{label.toUpperCase()}</th>\n      })\n   }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          <div className = \"tableFlex\">\n            <h1 id='title'>Lux Marketplace</h1>\n            <table id='countries' className=\"countryTable\">\n              <tbody>\n                <tr>{this.renderTableHeader()}</tr>\n\n                  {this.state.editing ? this.renderEditData(this.state.updating) :\n                  this.renderTableData()\n                  }\n\n              </tbody>\n            </table>\n          </div>\n\n          {/*<NewToken />*/}\n\n          <div className=\"paddedDiv\" />\n\n        </header>\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default Marketplace;\n"]},"metadata":{},"sourceType":"module"}